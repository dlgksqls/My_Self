package hello.my_self.mock;

import hello.my_self.member.domain.Member;
import hello.my_self.member.repository.MemberRepository;

import java.util.*;
import java.util.concurrent.atomic.AtomicLong;

public class FakeMemberRepository implements MemberRepository {

    private final AtomicLong autoGeneratedId = new AtomicLong(0);
    private final List<Member> data = new ArrayList<>();

    @Override
    public Member save(Member member) {
        if (member.getId() == null || member.getId() == 0){
            Member newMember = Member.builder()
                    .id(autoGeneratedId.incrementAndGet())
                    .name(member.getName())
                    .age(member.getAge())
                    .birth(member.getBirth())
                    .sex(member.getSex())
                    .description(member.getDescription())
                    .build();

            data.add(newMember);
            return newMember;
        }
        data.removeIf(item -> Objects.equals(item.getId(), member.getId()));
        data.add(member);
        return member;
    }

    @Override
    public Member findById(Long id) {
        Optional<Member>member = data.stream().filter(m -> m.getId().equals(id)).findFirst();
        return member.orElseThrow(() -> new NoSuchElementException("구성원이 없습니다."));
    }

    @Override
    public void delete(Member member) {
        data.removeIf(item -> Objects.equals(item.getId(), member.getId()));
    }
}
