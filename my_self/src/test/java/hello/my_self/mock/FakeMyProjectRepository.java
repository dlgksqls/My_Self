package hello.my_self.mock;

import hello.my_self.myproject.domain.MyProject;
import hello.my_self.myproject.repository.MyProjectRepository;

import java.util.ArrayList;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.concurrent.atomic.AtomicLong;

public class FakeMyProjectRepository implements MyProjectRepository {

    private final AtomicLong autoGeneratedId = new AtomicLong(0);
    private final List<MyProject> data = new ArrayList<>();
    @Override
    public MyProject save(MyProject newProject) {
        if (newProject.getId() == null || newProject.getId() == 0){
            MyProject myProject = MyProject.builder()
                    .id(autoGeneratedId.incrementAndGet())
                    .name(newProject.getName())
                    .role(newProject.getRole())
                    .description(newProject.getDescription())
                    .link(newProject.getLink())
                    .member(newProject.getMember())
                    .build();

            data.add(myProject);
            return myProject;
        }
        data.removeIf(item -> Objects.equals(item.getId(), newProject.getId()));
        data.add(newProject);
        return newProject;
    }

    @Override
    public MyProject findByName(String projectName) {
        return data.stream()
                .filter(item -> item.getName().equals(projectName))
                .findFirst()
                .orElseThrow(() -> new NoSuchElementException("해당 프로젝트는 없습니다."));
    }

    @Override
    public void delete(String name) {
        data.removeIf(item -> item.getName().equals(name));
    }
}
