package hello.my_self.mock;

import hello.my_self.projectstack.domain.ProjectStack;
import hello.my_self.projectstack.repository.ProjectStackRepository;

import java.util.ArrayList;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.concurrent.atomic.AtomicLong;

public class FakeProjectStackRepository implements ProjectStackRepository {

    private final AtomicLong autoGeneratedId = new AtomicLong(0);
    private final List<ProjectStack> data = new ArrayList<>();


    @Override
    public ProjectStack save(ProjectStack projectStack) {
        ProjectStack newRelation = ProjectStack.builder()
                .id(autoGeneratedId.incrementAndGet())
                .project(projectStack.getProject())
                .stack(projectStack.getStack())
                .build();

        data.add(newRelation);
        return newRelation;
    }

    @Override
    public ProjectStack findByProjectStackId(Long projectStackId) {
        ProjectStack projectStack = data.stream()
                .filter(pj -> pj.getId().equals(projectStackId))
                .findFirst()
                .orElseThrow(() -> new NoSuchElementException("해당 관계는 없습니다"));

        return projectStack;
    }

    @Override
    public void allDelete(Long projectStackId) {
        data.removeIf(pj -> pj.getId().equals(projectStackId));
    }

    @Override
    public List<ProjectStack> findById(Long id) {
        return data.stream()
                .filter(pj -> pj.getId().equals(id))
                .toList();
    }
}
